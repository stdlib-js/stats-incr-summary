{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport incrcount from '@stdlib/stats-incr-count';\nimport incrmax from '@stdlib/stats-incr-max';\nimport incrmin from '@stdlib/stats-incr-min';\nimport incrrange from '@stdlib/stats-incr-range';\nimport incrmidrange from '@stdlib/stats-incr-midrange';\nimport incrsum from '@stdlib/stats-incr-sum';\nimport incrmean from '@stdlib/stats-incr-mean';\nimport incrvariance from '@stdlib/stats-incr-variance';\nimport incrstdev from '@stdlib/stats-incr-stdev';\nimport incrskewness from '@stdlib/stats-incr-skewness';\nimport incrkurtosis from '@stdlib/stats-incr-kurtosis';\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a statistical summary.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsummary();\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\nfunction incrsummary() {\n\tvar midrange;\n\tvar variance;\n\tvar skewness;\n\tvar kurtosis;\n\tvar summary;\n\tvar count;\n\tvar range;\n\tvar stdev;\n\tvar mean;\n\tvar max;\n\tvar min;\n\tvar sum;\n\n\t// Incremental count:\n\tcount = incrcount();\n\n\t// Sum:\n\tsum = incrsum();\n\n\t// Sample mean:\n\tmean = incrmean();\n\n\t// Unbiased sample variance:\n\tvariance = incrvariance();\n\n\t// Corrected sample standard deviation:\n\tstdev = incrstdev();\n\n\t// Corrected sample skewness:\n\tskewness = incrskewness();\n\n\t// Corrected excess sample kurtosis:\n\tkurtosis = incrkurtosis();\n\n\t// Maximum value:\n\tmax = incrmax();\n\n\t// Minimum value:\n\tmin = incrmin();\n\n\t// Range (i.e., max-min):\n\trange = incrrange();\n\n\t// Mid-range:\n\tmidrange = incrmidrange();\n\n\t// Initial an object for tracking state:\n\tsummary = {};\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated summary. If not provided a value, the accumulator function returns the current summary.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {Object} summary\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn summary;\n\t\t}\n\t\tsummary.count = count( x );\n\t\tsummary.max = max( x );\n\t\tsummary.min = min( x );\n\t\tsummary.range = range( x );\n\t\tsummary.midrange = midrange( x );\n\t\tsummary.sum = sum( x );\n\t\tsummary.mean = mean( x );\n\t\tsummary.variance = variance( x );\n\t\tsummary.stdev = stdev( x );\n\t\tsummary.skewness = skewness( x );\n\t\tsummary.kurtosis = kurtosis( x );\n\t\treturn summary;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default incrsummary;\n"],"names":["incrsummary","midrange","variance","skewness","kurtosis","summary","count","range","stdev","mean","max","min","sum","incrcount","incrsum","incrmean","incrvariance","incrstdev","incrskewness","incrkurtosis","incrmax","incrmin","incrrange","incrmidrange","x","arguments","length"],"mappings":";;u+BAyDA,SAASA,IACR,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAsCJ,OAnCAN,EAAQO,IAGRD,EAAME,IAGNL,EAAOM,IAGPb,EAAWc,IAGXR,EAAQS,IAGRd,EAAWe,IAGXd,EAAWe,IAGXT,EAAMU,IAGNT,EAAMU,IAGNd,EAAQe,IAGRrB,EAAWsB,IAGXlB,EAAU,CAAA,EAWV,SAAsBmB,GACrB,GAA0B,IAArBC,UAAUC,OACd,OAAOrB,EAaR,OAXAA,EAAQC,MAAQA,EAAOkB,GACvBnB,EAAQK,IAAMA,EAAKc,GACnBnB,EAAQM,IAAMA,EAAKa,GACnBnB,EAAQE,MAAQA,EAAOiB,GACvBnB,EAAQJ,SAAWA,EAAUuB,GAC7BnB,EAAQO,IAAMA,EAAKY,GACnBnB,EAAQI,KAAOA,EAAMe,GACrBnB,EAAQH,SAAWA,EAAUsB,GAC7BnB,EAAQG,MAAQA,EAAOgB,GACvBnB,EAAQF,SAAWA,EAAUqB,GAC7BnB,EAAQD,SAAWA,EAAUoB,GACtBnB,CACP,CACF"}