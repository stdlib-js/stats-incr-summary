{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrcount = require( '@stdlib/stats-incr-count' );\nvar incrmax = require( '@stdlib/stats-incr-max' );\nvar incrmin = require( '@stdlib/stats-incr-min' );\nvar incrrange = require( '@stdlib/stats-incr-range' );\nvar incrmidrange = require( '@stdlib/stats-incr-midrange' );\nvar incrsum = require( '@stdlib/stats-incr-sum' );\nvar incrmean = require( '@stdlib/stats-incr-mean' );\nvar incrvariance = require( '@stdlib/stats-incr-variance' );\nvar incrstdev = require( '@stdlib/stats-incr-stdev' );\nvar incrskewness = require( '@stdlib/stats-incr-skewness' );\nvar incrkurtosis = require( '@stdlib/stats-incr-kurtosis' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a statistical summary.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrsummary();\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\nfunction incrsummary() {\n\tvar midrange;\n\tvar variance;\n\tvar skewness;\n\tvar kurtosis;\n\tvar summary;\n\tvar count;\n\tvar range;\n\tvar stdev;\n\tvar mean;\n\tvar max;\n\tvar min;\n\tvar sum;\n\n\t// Incremental count:\n\tcount = incrcount();\n\n\t// Sum:\n\tsum = incrsum();\n\n\t// Sample mean:\n\tmean = incrmean();\n\n\t// Unbiased sample variance:\n\tvariance = incrvariance();\n\n\t// Corrected sample standard deviation:\n\tstdev = incrstdev();\n\n\t// Corrected sample skewness:\n\tskewness = incrskewness();\n\n\t// Corrected excess sample kurtosis:\n\tkurtosis = incrkurtosis();\n\n\t// Maximum value:\n\tmax = incrmax();\n\n\t// Minimum value:\n\tmin = incrmin();\n\n\t// Range (i.e., max-min):\n\trange = incrrange();\n\n\t// Mid-range:\n\tmidrange = incrmidrange();\n\n\t// Initial an object for tracking state:\n\tsummary = {};\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated summary. If not provided a value, the accumulator function returns the current summary.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {Object} summary\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn summary;\n\t\t}\n\t\tsummary.count = count( x );\n\t\tsummary.max = max( x );\n\t\tsummary.min = min( x );\n\t\tsummary.range = range( x );\n\t\tsummary.midrange = midrange( x );\n\t\tsummary.sum = sum( x );\n\t\tsummary.mean = mean( x );\n\t\tsummary.variance = variance( x );\n\t\tsummary.stdev = stdev( x );\n\t\tsummary.skewness = skewness( x );\n\t\tsummary.kurtosis = kurtosis( x );\n\t\treturn summary;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrsummary;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a statistical summary incrementally.\n*\n* @module @stdlib/stats-incr-summary\n*\n* @example\n* var incrsummary = require( '@stdlib/stats-incr-summary' );\n*\n* var accumulator = incrsummary();\n*\n* var summary = accumulator();\n* // returns {}\n*\n* summary = accumulator( 2.0 );\n* // returns {...}\n*\n* summary = accumulator( -5.0 );\n* // returns {...}\n*\n* summary = accumulator();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,0BAA2B,EAChDC,EAAU,QAAS,wBAAyB,EAC5CC,EAAU,QAAS,wBAAyB,EAC5CC,EAAY,QAAS,0BAA2B,EAChDC,EAAe,QAAS,6BAA8B,EACtDC,EAAU,QAAS,wBAAyB,EAC5CC,EAAW,QAAS,yBAA0B,EAC9CC,EAAe,QAAS,6BAA8B,EACtDC,EAAY,QAAS,0BAA2B,EAChDC,EAAe,QAAS,6BAA8B,EACtDC,EAAe,QAAS,6BAA8B,EAyB1D,SAASC,GAAc,CACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,OAAAN,EAAQjB,EAAU,EAGlBuB,EAAMlB,EAAQ,EAGde,EAAOd,EAAS,EAGhBO,EAAWN,EAAa,EAGxBY,EAAQX,EAAU,EAGlBM,EAAWL,EAAa,EAGxBM,EAAWL,EAAa,EAGxBW,EAAMpB,EAAQ,EAGdqB,EAAMpB,EAAQ,EAGdgB,EAAQf,EAAU,EAGlBS,EAAWR,EAAa,EAGxBY,EAAU,CAAC,EAEJQ,EASP,SAASA,EAAaC,EAAI,CACzB,OAAK,UAAU,SAAW,IAG1BT,EAAQ,MAAQC,EAAOQ,CAAE,EACzBT,EAAQ,IAAMK,EAAKI,CAAE,EACrBT,EAAQ,IAAMM,EAAKG,CAAE,EACrBT,EAAQ,MAAQE,EAAOO,CAAE,EACzBT,EAAQ,SAAWJ,EAAUa,CAAE,EAC/BT,EAAQ,IAAMO,EAAKE,CAAE,EACrBT,EAAQ,KAAOI,EAAMK,CAAE,EACvBT,EAAQ,SAAWH,EAAUY,CAAE,EAC/BT,EAAQ,MAAQG,EAAOM,CAAE,EACzBT,EAAQ,SAAWF,EAAUW,CAAE,EAC/BT,EAAQ,SAAWD,EAAUU,CAAE,GACxBT,CACR,CACD,CAKAjB,EAAO,QAAUY,IC7FjB,IAAIe,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "incrcount", "incrmax", "incrmin", "incrrange", "incrmidrange", "incrsum", "incrmean", "incrvariance", "incrstdev", "incrskewness", "incrkurtosis", "incrsummary", "midrange", "variance", "skewness", "kurtosis", "summary", "count", "range", "stdev", "mean", "max", "min", "sum", "accumulator", "x", "main"]
}
